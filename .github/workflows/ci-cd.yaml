name: CI/CD Pipeline for Cat Fact API

on:
  push:
    branches:
      - main

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Write Kind Configuration
      - name: Write Kind Configuration
        run: |
          cat <<EOF > kind-config.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            disableDefaultCNI: false
          nodes:
            - role: control-plane
              extraPortMappings:
                - containerPort: 5000
                  hostPort: 5000
                  protocol: TCP
          EOF

      # Step 3: Set up Kubernetes with Kind
      - name: Set up Kubernetes with Kind
        run: |
          ls -la
          kind delete cluster --name kind || true
          kind create cluster --name kind --config=kind-config.yaml

      - name: Remove Taint from Control Plane
        run: |
          kubectl get nodes -o wide
          kubectl describe node kind-control-plane
          kubectl describe node kind | grep Taints
          docker logs kind-control-plane
          kubectl taint nodes --all node.kubernetes.io/not-ready-
      
      - name: Wait for Node to be Ready
        run: |
          echo "Waiting for node to be in Ready state..."
          for i in {1..10}; do
            kubectl get nodes | grep -q ' Ready ' && break
            echo "Node not ready yet. Retrying in 10s..."
            sleep 10
          done
          kubectl get nodes

      # Step 4: Verify Kind Cluster
      - name: Verify Kind Cluster
        run: |
          kubectl cluster-info
          kubectl get nodes

      # Step 5: Set Kubernetes Context
      - name: Set Kubernetes Context
        run: |
          kubectl config use-context kind-kind

      # Step 6: Install Helm
      - name: Install Helm
        uses: azure/setup-helm@v3

      # Step 7: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t catfact-api .

      # Step 8: Validate Docker Image in Kind
      - name: Validate Docker Image in Kind
        run: |
          docker images | grep catfact-api

      # Step 9: Load Docker Image into Kind
      - name: Load Docker Image into Kind
        run: |
          kind load docker-image catfact-api --name kind

      # Step 11: Deploy Application using Helm
      - name: Deploy Application using Helm
        run: |
          helm upgrade --install catfact-api ./charts 

      - name: Wait for Container to be Ready
        run: |
          kubectl get pods
          sleep 10
          kubectl get pods

      # Step 13: Install Curl
      - name: Install Curl
        run: sudo apt-get install -y curl

      # Step 14: Test Endpoints
      - name: Test Endpoints
        run: |
          # Port forward the service
          # kubectl port-forward service/catfact-api 5000:5000 &
          # sleep 10

          # Test /catfact endpoint
          echo "Testing /catfact endpoint..."
          curl -s http://localhost:30001/catfact

          # Test /health endpoint
          echo "Testing /health endpoint..."
          curl -s http://localhost:30001/health
